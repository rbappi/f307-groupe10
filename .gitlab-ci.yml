variables:
  MAVEN_OPTS: -Dmaven.repo.local=.m2/repository
  
#  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this #work.
#  MAVEN_OPTS: >-
#    -Dhttps.protocols=TLSv1.2
#    -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
#    -Dorg.slf4j.simpleLogger.showDateTime=true
#    -Djava.awt.headless=true
#
#  # As of Maven 3.3.0 instead of this you MAY define these options in `.mvn/maven.config` so the same config is #used
#  # when running from the command line.
#  # As of Maven 3.6.1, the use of `--no-tranfer-progress` (or `-ntp`) suppresses download and upload messages. #The use
#  # of the `Slf4jMavenTransferListener` is no longer necessary.
#  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
#  MAVEN_CLI_OPTS: >-
#    --batch-mode
#    --errors
#    --fail-at-end
#    --show-version
#    --no-transfer-progress
#    -DinstallAtEnd=true
#    -DdeployAtEnd=true
image: maven:latest

stages:
    - build
    - test
    - package

## Cache downloaded dependencies and plugins between builds.
## To keep cache across branches add 'key: "$CI_JOB_NAME"'
## Be aware that `mvn deploy` will install the built jar into this repository. 
##If you notice your cache size
## increasing, 
## consider adding `-Dmaven.install.skip=true` to `MAVEN_OPTS` or in `.mvn/maven.config`
cache:
  paths:
    - .m2/repository
    - target

build_job:
  stage: build
  tags:
    - docker 

  script: 
    - echo "Maven compile started"
    - "mvn compile"


test_job:
  stage: test
  tags:
    - docker 

  script: 
    - echo "Maven test started"
    - "mvn test"

  artifacts:
    when: always
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
        - target/failsafe-reports/TEST-*.xml

package_job:
  stage: package
  tags:
    - docker 

  script: 
    - echo "Maven packaging started"
    - "mvn package"

## To contribute improvements to CI/CD templates, please follow the Development guide at:
## https://docs.gitlab.com/ee/development/cicd/templates.html
## This specific template is located at:
## https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Maven.gitlab-ci.yml
#
## Build JAVA applications using Apache Maven (http://maven.apache.org)
## For docker image tags see https://hub.docker.com/_/maven/
##

## For general lifecycle information see 
# https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html


## Verify merge requests using JDK8
#verify:jdk8:
#  extends:
#    - .verify
#
## run tests
### from .test/
#test:
#  stage: test
#  image: maven:3-openjdk-8
#  script:
#    - mvn test
#  artifacts:
#    when: always
#    reports:
#      junit:
#        - target/junit/report.xml

